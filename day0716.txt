SOLID 원칙 
객체지향 설계 원칙 (SOLID) 
  S(단일 책임 원칙): 클래스는 하나의 책임만 가져야 함 
  O(개방-폐쇄 원칙): 확장에는 열려있고, 수정에는 닫혀있어야 함 
  L(리스코프 치환 원칙): 하위 타입은 상위 타입을 대체할 수 있어야 함 
  I(인터페이스 분리 원칙): 클라이언트는 사용하지 않는 인터페이스에 의존하지 않아야 함 
  D(의존관계 역전 원칙): 고수준 모듈은 저수준 모듈에 의존하지 않아야 함
--------------------------------------------------------------------------
autowire="byType"
변수의 타입에 맞춰 컨테이너가 가지고 있는 bean 주입

같은 타입의 bean이 여러개 있으면 에러
해당 타입의 bean이 없다면 자손 타입의 bean 주입
--------------------------------------------------------------------------
빈 / 컨테이너
DI
@Autowired / @Value
빈 스캔, 빈 생성(5가지)